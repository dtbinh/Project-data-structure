public class Graph {
	static final int MAX_VERTEX = 20;
	private Vertex vertex[];
	private Arc arc[][];
	
	public Graph() {
		
	}
	
	private int searchIndex(String nameVertex) {
		for (int i = 0; i < MAX_VERTEX; i++) {
			if (vertex[i] != null) {
				if (vertex[i].getName() == nameVertex) {
					return i;
				}
			}
		}
		
		return -1;
	}
		
	public void insertVertex(int id, String name) {
		
	}
	
	public Boolean insertArc(String _origin, String _destination, int distance) {
		int origin = searchIndex(_origin);
		int destination = searchIndex(_destination);
		
		
		
		return true;
	}
	
	/*
	 * bool Grafo::insertarArco(int origen, int destino, int costo, int distancia) {
	int nOrigen = buscarIndice(origen);
	int nDestino = buscarIndice(destino);

	if (nOrigen != -1 && nDestino != -1) {
		Arco* arco = new Arco(costo, distancia);
		costos[nOrigen][nDestino] = arco;

		return true;
	}
	else {
		return false;
	}
}
	 */
}
